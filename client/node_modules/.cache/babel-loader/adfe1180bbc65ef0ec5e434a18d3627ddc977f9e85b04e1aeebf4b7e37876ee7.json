{"ast":null,"code":"var _jsxFileName = \"/Users/natalia/sleeping-app/client/src/components/App.js\";\n/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchUser } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"h-100 p-5 text-white bg-dark\",\n  style: {\n    position: 'fixed',\n    marginLeft: '19%',\n    display: 'inline-block',\n    width: '100%',\n    // marginTop: '-20%',\n    float: 'left'\n  },\n  children: props.children\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 9,\n  columnNumber: 3\n}, this);\n// const dispatch = useDispatch();\n// const authenticated = useSelector((state) => state.auth.authenticated);\n// useEffect(() => {\n//   if (authenticated) {\n//     dispatch(fetchUser());\n//   }\n// }, [authenticated, dispatch]);\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","App","props","position","marginLeft","display","width","float","children"],"sources":["/Users/natalia/sleeping-app/client/src/components/App.js"],"sourcesContent":["/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react/prop-types */\nimport React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { fetchUser } from '../actions';\n\nconst App = (props) => (\n  <div\n    className=\"h-100 p-5 text-white bg-dark\"\n    style={{\n      position: 'fixed',\n      marginLeft: '19%',\n      display: 'inline-block',\n      width: '100%',\n      // marginTop: '-20%',\n      float: 'left',\n    }}\n  >\n    {props.children}\n  </div>\n);\n// const dispatch = useDispatch();\n// const authenticated = useSelector((state) => state.auth.authenticated);\n// useEffect(() => {\n//   if (authenticated) {\n//     dispatch(fetchUser());\n//   }\n// }, [authenticated, dispatch]);\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC;AACA;AAAA;AAEA,MAAMC,GAAG,GAAIC,KAAK,iBAChB;EACE,SAAS,EAAC,8BAA8B;EACxC,KAAK,EAAE;IACLC,QAAQ,EAAE,OAAO;IACjBC,UAAU,EAAE,KAAK;IACjBC,OAAO,EAAE,cAAc;IACvBC,KAAK,EAAE,MAAM;IACb;IACAC,KAAK,EAAE;EACT,CAAE;EAAA,UAEDL,KAAK,CAACM;AAAQ;EAAA;EAAA;EAAA;AAAA,QAElB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,KArBMP,GAAG;AAuBT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}