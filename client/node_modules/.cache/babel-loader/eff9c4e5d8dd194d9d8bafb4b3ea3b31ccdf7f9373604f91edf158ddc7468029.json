{"ast":null,"code":"var _s = $RefreshSig$();\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { Button, Form } from 'react-bootstrap';\nconst sleepySchema = Yup.object().shape({\n  date: Yup.date().required().nullable(),\n  wakeUp: Yup.string().required(),\n  nap1: {\n    start: Yup.string().required(),\n    end: Yup.string().required()\n  },\n  nap2: {\n    start: Yup.string(),\n    end: Yup.string()\n  },\n  nap3: {\n    start: Yup.string(),\n    end: Yup.string()\n  },\n  nap4: {\n    start: Yup.string(),\n    end: Yup.string()\n  },\n  bedTime: Yup.string()\n});\nconst SleepyForm = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(sleepySchema)\n  });\n};\n_s(SleepyForm, \"HLC1IFclXfL/K+q6lxeDS/Po7Wk=\", false, function () {\n  return [useForm];\n});\n_c = SleepyForm;\nvar _c;\n$RefreshReg$(_c, \"SleepyForm\");","map":{"version":3,"names":["React","useForm","useSelector","useDispatch","useHistory","yupResolver","Yup","Button","Form","sleepySchema","object","shape","date","required","nullable","wakeUp","string","nap1","start","end","nap2","nap3","nap4","bedTime","SleepyForm","register","handleSubmit","formState","errors","resolver"],"sources":["/Users/natalia/sleeping-app/client/src/components/SleepyForm.js"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { Button, Form } from 'react-bootstrap';\n\nconst sleepySchema = Yup.object().shape({\n  date: Yup.date().required().nullable(),\n  wakeUp: Yup.string().required(),\n  nap1: { start: Yup.string().required(), end: Yup.string().required() },\n  nap2: { start: Yup.string(), end: Yup.string() },\n  nap3: { start: Yup.string(), end: Yup.string() },\n  nap4: { start: Yup.string(), end: Yup.string() },\n  bedTime: Yup.string(),\n});\n\nconst SleepyForm = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(sleepySchema),\n  });\n};\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,iBAAiB;AACzC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,SAASC,MAAM,EAAEC,IAAI,QAAQ,iBAAiB;AAE9C,MAAMC,YAAY,GAAGH,GAAG,CAACI,MAAM,EAAE,CAACC,KAAK,CAAC;EACtCC,IAAI,EAAEN,GAAG,CAACM,IAAI,EAAE,CAACC,QAAQ,EAAE,CAACC,QAAQ,EAAE;EACtCC,MAAM,EAAET,GAAG,CAACU,MAAM,EAAE,CAACH,QAAQ,EAAE;EAC/BI,IAAI,EAAE;IAAEC,KAAK,EAAEZ,GAAG,CAACU,MAAM,EAAE,CAACH,QAAQ,EAAE;IAAEM,GAAG,EAAEb,GAAG,CAACU,MAAM,EAAE,CAACH,QAAQ;EAAG,CAAC;EACtEO,IAAI,EAAE;IAAEF,KAAK,EAAEZ,GAAG,CAACU,MAAM,EAAE;IAAEG,GAAG,EAAEb,GAAG,CAACU,MAAM;EAAG,CAAC;EAChDK,IAAI,EAAE;IAAEH,KAAK,EAAEZ,GAAG,CAACU,MAAM,EAAE;IAAEG,GAAG,EAAEb,GAAG,CAACU,MAAM;EAAG,CAAC;EAChDM,IAAI,EAAE;IAAEJ,KAAK,EAAEZ,GAAG,CAACU,MAAM,EAAE;IAAEG,GAAG,EAAEb,GAAG,CAACU,MAAM;EAAG,CAAC;EAChDO,OAAO,EAAEjB,GAAG,CAACU,MAAM;AACrB,CAAC,CAAC;AAEF,MAAMQ,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAG3B,OAAO,CAAC;IACV4B,QAAQ,EAAExB,WAAW,CAACI,YAAY;EACpC,CAAC,CAAC;AACJ,CAAC;AAAC,GARIe,UAAU;EAAA,QAKVvB,OAAO;AAAA;AAAA,KALPuB,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}